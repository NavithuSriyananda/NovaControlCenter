<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:model="clr-namespace:Control_Center.Class">
    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
  -->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu" BorderThickness="3">
        <ContextMenu.BorderBrush>
            <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0" Opacity="1">
                <!--<GradientStop x:Name="three" Color="#FF2400" Offset="0.001" ></GradientStop>
                    <GradientStop  Color="#12000000" Offset="0.0"></GradientStop>
                    <GradientStop  Color="#12000000" Offset="1.0"></GradientStop>-->
                <GradientStop  Color="#12000000" Offset="0.0"></GradientStop>
                <GradientStop  Color="#12000000" Offset="0.5"></GradientStop>
                <GradientStop x:Name="three" Color="Red" Offset="1.0"></GradientStop>
            </LinearGradientBrush>
        </ContextMenu.BorderBrush>
        <MenuItem Header="Nova Control Center" IsHitTestVisible="False" FontWeight="DemiBold">
            <MenuItem.Icon>
                <Image Source="/Images/TrayIcon.ico"/>
            </MenuItem.Icon>
        </MenuItem>
        <Separator/>
        <MenuItem Header="Show" Command="{Binding ShowWindowCommand}" ToolTip="Open Control Center" />
        <MenuItem Header="Hide" Command="{Binding HideWindowCommand}" ToolTip="Close Control Center" />
        <Separator />
        <MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}" ToolTip="Exit Application"/>
    </ContextMenu>


    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    IconSource="/Images/TrayIcon.ico"
                    ToolTipText="Nova Control Center"
                    DoubleClickCommand="{Binding DoubleClickCommand}"
                    ContextMenu="{StaticResource SysTrayMenu}"                    
                    >

        <!-- self-assign a data context (could also be done programmatically) -->
        <tb:TaskbarIcon.DataContext>
            <model:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>


</ResourceDictionary>